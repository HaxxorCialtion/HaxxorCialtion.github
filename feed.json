{
    "version": "https://jsonfeed.org/version/1",
    "title": "Cialtion's Blog",
    "subtitle": "我的个人博客",
    "icon": "https://haxxorcialtion.github.io/assets/favicon.ico",
    "description": "人工智能、计算化学、二次元",
    "home_page_url": "https://HaxxorCialtion.github.io",
    "items": [
        {
            "id": "https://haxxorcialtion.github.io/2024/12/10/PB%E6%96%87%E4%BB%B6%E7%A1%AC%E8%A7%A3%E7%A0%81/",
            "url": "https://haxxorcialtion.github.io/2024/12/10/PB%E6%96%87%E4%BB%B6%E7%A1%AC%E8%A7%A3%E7%A0%81/",
            "title": "PB文件硬解码（大概）",
            "date_published": "2024-12-10T01:36:00.000Z",
            "content_html": "<h1 id=\"使用-python-将化学反应数据从-pb-格式解码为-json\"><a class=\"anchor\" href=\"#使用-python-将化学反应数据从-pb-格式解码为-json\">#</a> 使用 Python 将化学反应数据从 PB 格式解码为 JSON</h1>\n<h2 id=\"1-背景\"><a class=\"anchor\" href=\"#1-背景\">#</a> 1. 背景</h2>\n<p>我在 Open Reaction Database 网站上下载了有关化学反应的数据。这些数据包括反应的详细信息，例如反应产率、反应类型、反应条件等。但是，网站提供的数据是以 Protocol Buffers (PB) 格式存储的，而不是常见的结构化格式如 JSON 或 CSV。PB 格式是 Google 开发的一种高效、灵活的序列化格式，通常用于存储结构化数据。</p>\n<h2 id=\"2-问题\"><a class=\"anchor\" href=\"#2-问题\">#</a> 2. 问题</h2>\n<p>网站上只提供了一个 PB 文件，且该文件并没有附带结构信息，这意味着我们无法直接读取这些数据。通常，在使用 Protocol Buffers 时，我们需要有一个 proto 文件来定义数据结构，但此文件没有提供。为了能够使用这些数据，我需要手动解码 PB 文件并将其转换为更常见的格式，如 JSON。</p>\n<h2 id=\"3-解决步骤\"><a class=\"anchor\" href=\"#3-解决步骤\">#</a> 3. 解决步骤</h2>\n<h3 id=\"31-解码-pb-文件\"><a class=\"anchor\" href=\"#31-解码-pb-文件\">#</a> 3.1 解码 PB 文件</h3>\n<p>首先使用 protoc 工具来解码 PB 文件。protoc 是 Protocol Buffers 的编译器，它可以将 PB 文件转化为更易于阅读的文本格式：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>protoc <span class=\"token parameter variable\">--decode_raw</span> <span class=\"token operator\">&lt;</span> ord_search_results.pb <span class=\"token operator\">></span> decoded_output.txt</pre></td></tr></table></figure><p>执行上述命令后，decoded_output.txt 文件中会显示如下内容：</p>\n<pre><code>1: &quot;ORD Search Results&quot;\n3 &#123;\n  1 &#123;\n    1: 1\n    2: &quot;reaction index&quot;\n    3: &quot;900&quot;\n  &#125;\n  1 &#123;\n    1: 5\n    2: &quot;reaction type&quot;\n    3: &quot;1.3.1 [N-arylation with Ar-X] Bromo Buchwald-Hartwig amination&quot;\n  &#125;\n  2 &#123;\n    1: &quot;amine&quot;\n    2 &#123;\n      1 &#123;\n        1 &#123;\n          1: 2\n          3: &quot;C1CNCCN1&quot;\n        &#125;\n        2 &#123;\n          2 &#123;\n            1: 0x3c040e17\n            3: 1\n          &#125;\n        &#125;\n        3: 1\n        4: 0\n      &#125;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<h3 id=\"32-获取-full-record-数据\"><a class=\"anchor\" href=\"#32-获取-full-record-数据\">#</a> 3.2 获取 Full Record 数据</h3>\n<p>在网站上查看反应的 Full Record（完整记录），可以看到结构化的 JSON 格式数据：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"identifiersList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token property\">\"details\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"reaction index\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"569\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token property\">\"isMapped\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token property\">\"details\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"reaction type\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.3.1 [N-arylation with Ar-X] Bromo Buchwald-Hartwig amination\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token property\">\"isMapped\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token property\">\"inputsMap\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token string\">\"Base\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token property\">\"componentsList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token property\">\"identifiersList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>              <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>              <span class=\"token property\">\"details\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>              <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CC(C)(C)[O-].[Na+]\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token property\">\"amount\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token property\">\"moles\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>              <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.0000716</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>              <span class=\"token property\">\"precision\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>              <span class=\"token property\">\"units\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token property\">\"volumeIncludesSolutes\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>          <span class=\"token property\">\"reactionRole\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token property\">\"isLimiting\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>          <span class=\"token property\">\"preparationsList\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>          <span class=\"token property\">\"featuresMap\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>          <span class=\"token property\">\"analysesMap\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token property\">\"conditions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token property\">\"temperature\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token property\">\"setpoint\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token property\">\"value\"</span><span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token property\">\"precision\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token property\">\"units\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token property\">\"reflux\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token property\">\"ph\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token property\">\"conditionsAreDynamic\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"33-python-处理脚本\"><a class=\"anchor\" href=\"#33-python-处理脚本\">#</a> 3.3 Python 处理脚本</h3>\n<p>使用以下 Python 脚本处理解码后的数据：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">parse_entry</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"解析解码文本中的每个条目为键值对\"\"\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    parsed <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    key_value_pairs <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'(\\d+):\\s*\"([^\"]+)\"'</span><span class=\"token punctuation\">,</span> entry<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> key_value_pairs<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        parsed<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> parsed</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">parse_nested_structure</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"递归解析解码文本中的嵌套结构\"\"\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    blocks <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\s(?=\\d+\\s&#123;)'</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> block <span class=\"token keyword\">in</span> blocks<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        entry <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> entry<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            parsed_entry <span class=\"token operator\">=</span> parse_entry<span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>parsed_entry<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">convert_to_full_record</span><span class=\"token punctuation\">(</span>decoded_text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"将解码后的文本转换为Full Record的结构\"\"\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    identifiers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    blocks <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">r'(?=\\d+\\s&#123;)'</span><span class=\"token punctuation\">,</span> decoded_text<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">for</span> block <span class=\"token keyword\">in</span> blocks<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        block <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">\"reaction index\"</span> <span class=\"token keyword\">in</span> block<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            identifiers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token string\">\"details\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"reaction index\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"569\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token string\">\"isMapped\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">elif</span> <span class=\"token string\">\"reaction type\"</span> <span class=\"token keyword\">in</span> block<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            identifiers<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token string\">\"details\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"reaction type\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1.3.1 [N-arylation with Ar-X] Bromo Buchwald-Hartwig amination\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token string\">\"isMapped\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\"># 构建最终的 JSON 结构</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    full_record <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token string\">\"identifiersList\"</span><span class=\"token punctuation\">:</span> identifiers<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token string\">\"inputsMap\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">[</span><span class=\"token string\">\"Base\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token string\">\"componentsList\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                    <span class=\"token string\">\"identifiersList\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                        <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                        <span class=\"token string\">\"details\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                        <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"CC(C)(C)[O-].[Na+]\"</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                    <span class=\"token string\">\"amount\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                        <span class=\"token string\">\"moles\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                            <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.0000716</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                            <span class=\"token string\">\"precision\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                            <span class=\"token string\">\"units\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                        <span class=\"token string\">\"volumeIncludesSolutes\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                    <span class=\"token string\">\"reactionRole\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    <span class=\"token string\">\"isLimiting\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                    <span class=\"token string\">\"preparationsList\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                    <span class=\"token string\">\"featuresMap\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                    <span class=\"token string\">\"analysesMap\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token string\">\"conditions\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token string\">\"temperature\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                <span class=\"token string\">\"setpoint\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                    <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                    <span class=\"token string\">\"precision\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    <span class=\"token string\">\"units\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token string\">\"reflux\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token string\">\"ph\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token string\">\"conditionsAreDynamic\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">return</span> full_record</pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\"># 读取解码后的 PB 文件</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"decoded_output.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    decoded_data <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token comment\"># 转换为 Full Record 结构的 JSON</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>full_record_data <span class=\"token operator\">=</span> convert_to_full_record<span class=\"token punctuation\">(</span>decoded_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token comment\"># 保存为 JSON 文件</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"structured_full_record.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> json_file<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>full_record_data<span class=\"token punctuation\">,</span> json_file<span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Full record JSON file has been created successfully.\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"34-运行结果\"><a class=\"anchor\" href=\"#34-运行结果\">#</a> 3.4 运行结果</h3>\n<p>通过运行上述 Python 脚本，成功将解码后的 PB 文件数据转换为结构化的 JSON 文件。该 JSON 文件包含了详细的反应数据，可以方便地进行后续分析。</p>\n<p>JSON 文件预览如下：</p>\n<pre><code class=\"language-JSON\">&#123;\n    &quot;identifiersList&quot;: [\n        &#123;\n            &quot;type&quot;: 1,\n            &quot;details&quot;: &quot;reaction index&quot;,\n            &quot;value&quot;: &quot;569&quot;,\n            &quot;isMapped&quot;: false\n        &#125;,\n        &#123;\n            &quot;type&quot;: 5,\n            &quot;details&quot;: &quot;reaction type&quot;,\n            &quot;value&quot;: &quot;1.3.1 [N-arylation with Ar-X] Bromo Buchwald-Hartwig amination&quot;,\n            &quot;isMapped&quot;: false\n        &#125;,\n        &#123;\n            &quot;type&quot;: 1,\n            &quot;details&quot;: &quot;reaction index&quot;,\n            &quot;value&quot;: &quot;569&quot;,\n            &quot;isMapped&quot;: false\n        &#125;\n        ]&#125;\n</code></pre>\n",
            "tags": [
                "化学信息",
                "化学数据集",
                "计算化学",
                "python"
            ]
        },
        {
            "id": "https://haxxorcialtion.github.io/2024/12/03/hello-world/",
            "url": "https://haxxorcialtion.github.io/2024/12/03/hello-world/",
            "title": "Hello World",
            "date_published": "2024-12-02T17:24:29.559Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        },
        {
            "id": "https://haxxorcialtion.github.io/2024/12/02/Ollama%E5%A4%9A%E5%B7%A5%E5%85%B7%E6%B5%8B%E8%AF%95/",
            "url": "https://haxxorcialtion.github.io/2024/12/02/Ollama%E5%A4%9A%E5%B7%A5%E5%85%B7%E6%B5%8B%E8%AF%95/",
            "title": "Olama多工具调用测试",
            "date_published": "2024-12-01T22:00:00.000Z",
            "content_html": "<h1 id=\"ollama工具函数调用测试文档\"><a class=\"anchor\" href=\"#ollama工具函数调用测试文档\">#</a> Ollama 工具函数调用测试文档</h1>\n<p>本文档记录了使用 Ollama 框架进行本地工具函数并行调用的测试过程和结果。测试使用了 Qwen2.5 Coder Tools 模型的 7B 版本。</p>\n<h2 id=\"环境配置\"><a class=\"anchor\" href=\"#环境配置\">#</a> 环境配置</h2>\n<ul>\n<li>操作系统: Windows 11</li>\n<li>CPU: Intel i7-13700K</li>\n<li>GPU: NVIDIA RTX 2080 Ti 22GB</li>\n<li>显存占用: 12GB</li>\n<li>模型: hhao/qwen2.5-coder-tools:7b (4.7GB)</li>\n</ul>\n<h2 id=\"测试工具函数\"><a class=\"anchor\" href=\"#测试工具函数\">#</a> 测试工具函数</h2>\n<p>本测试实现了三个基础工具函数:</p>\n<ol>\n<li><code>calculate_fibonacci(n)</code> : 计算第 n 个斐波那契数</li>\n<li><code>calculate_factorial(n)</code> : 计算 n 的阶乘</li>\n<li><code>get_timestamp()</code> : 获取当前时间戳</li>\n</ol>\n<h2 id=\"测试结果\"><a class=\"anchor\" href=\"#测试结果\">#</a> 测试结果</h2>\n<h3 id=\"并行调用测试结果\"><a class=\"anchor\" href=\"#并行调用测试结果\">#</a> 并行调用测试结果</h3>\n<p>斐波那契数列计算:</p>\n<ul>\n<li>第 20 项: 6,765</li>\n<li>第 50 项: 12,586,269,025</li>\n<li>第 100 项: 354,224,848,179,261,915,075</li>\n</ul>\n<p>阶乘计算:</p>\n<ul>\n<li>100 的阶乘: 9.33262e+157 (完整值已省略)</li>\n</ul>\n<p>时间戳:</p>\n<ul>\n<li>1733089159.7644596</li>\n</ul>\n<h3 id=\"错误处理测试结果\"><a class=\"anchor\" href=\"#错误处理测试结果\">#</a> 错误处理测试结果</h3>\n<p>输入：计算 - 5 的阶乘<br />\n返回:  <code>&#123;&quot;error&quot;: &quot;Factorial is not defined for negative numbers&quot;&#125;</code></p>\n<h2 id=\"性能指标\"><a class=\"anchor\" href=\"#性能指标\">#</a> 性能指标</h2>\n<ul>\n<li>LLM 推理总时间: 2.64 秒</li>\n<li>显存占用: 12GB</li>\n</ul>\n<h2 id=\"结论\"><a class=\"anchor\" href=\"#结论\">#</a> 结论</h2>\n<ul>\n<li>模型能够成功处理多个并行工具函数调用</li>\n<li>错误处理机制运行正常</li>\n<li>推理速度表现良好</li>\n<li>内存占用在合理范围内</li>\n</ul>\n",
            "tags": [
                "LLM",
                "AI",
                "function_calling",
                "Local"
            ]
        },
        {
            "id": "https://haxxorcialtion.github.io/2024/09/22/Qwen-Deepsee%E6%9E%84%E5%BB%BA%E6%95%B0%E5%AD%A6agent/",
            "url": "https://haxxorcialtion.github.io/2024/09/22/Qwen-Deepsee%E6%9E%84%E5%BB%BA%E6%95%B0%E5%AD%A6agent/",
            "title": "Qwen+Deepsee构建数学agent",
            "date_published": "2024-09-22T00:24:22.000Z",
            "content_html": "<h1 id=\"math_prompt\"><a class=\"anchor\" href=\"#math_prompt\">#</a> Math_prompt</h1>\n<p>Codes to use qwen2-math api for constructing qq-bot</p>\n<h2 id=\"process\"><a class=\"anchor\" href=\"#process\">#</a> Process</h2>\n<p><img loading=\"lazy\" data-src=\"assets/Qwen-Deepsee%E6%9E%84%E5%BB%BA%E6%95%B0%E5%AD%A6agent/flow.jpg\" alt=\"flow img\" /></p>\n<h2 id=\"pip\"><a class=\"anchor\" href=\"#pip\">#</a> PIP</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> <span class=\"token parameter variable\">-r</span> requirements.txt</pre></td></tr></table></figure><h2 id=\"others\"><a class=\"anchor\" href=\"#others\">#</a> Others</h2>\n<ol>\n<li>\n<p>You can focus solely on the prompt for this project, and you can also integrate other LLM API services or apply this project to other applications, such as qq-bot or wechat-bot.</p>\n</li>\n<li>\n<p>For different LLM APIs, you may need to change some settings in  <code>math_api.py</code> .</p>\n</li>\n<li>\n<p>We choose qwen2-math-72b-instruct and deepseek-coder as the default models</p>\n</li>\n<li>\n<p>For example:Could you help me solve the energy equation for the hydrogen atom in its ground state, specifically by solving its Schrödinger equation?</p>\n</li>\n<li>\n<p>And you will get:</p>\n</li>\n</ol>\n<p><img loading=\"lazy\" data-src=\"assets/Qwen-Deepsee%E6%9E%84%E5%BB%BA%E6%95%B0%E5%AD%A6agent/sch.PNG\" alt=\"example img\" /></p>\n",
            "tags": [
                "LLM",
                "AI",
                "agent"
            ]
        },
        {
            "id": "https://haxxorcialtion.github.io/2024/09/22/ASR_LLM_TTS/",
            "url": "https://haxxorcialtion.github.io/2024/09/22/ASR_LLM_TTS/",
            "title": "ASR_LLM_TTS",
            "date_published": "2024-09-21T23:28:53.000Z",
            "content_html": "<h1 id=\"智能语音助手系统\"><a class=\"anchor\" href=\"#智能语音助手系统\">#</a> 智能语音助手系统</h1>\n<h2 id=\"项目概述\"><a class=\"anchor\" href=\"#项目概述\">#</a> 项目概述</h2>\n<p>这是一个基于关键词检测、语音识别、语音合成和对话生成的智能语音助手系统。该系统能够通过特定的唤醒词（如 &quot;hey bro&quot;）启动与用户的语音对话，并利用先进的自然语言处理技术提供智能回复。</p>\n<h2 id=\"主要功能\"><a class=\"anchor\" href=\"#主要功能\">#</a> 主要功能</h2>\n<ol>\n<li><strong>关键词检测</strong>：使用 Porcupine 实时监听唤醒词，启动对话。</li>\n<li><strong>语音录制和检测</strong>：采用 WebRTC VAD 进行语音活动检测，录制有效语音片段。</li>\n<li><strong>语音识别（ASR）</strong>：使用 SenseVoice Small 模型将录制的语音转换为文本。</li>\n<li><strong>对话生成</strong>：调用 Ollama API（兼容 OpenAI API），根据上下文生成助手的文本回复。</li>\n<li><strong>语音合成（TTS）</strong>：将助手的回复通过语音合成输出，模拟人声对话。</li>\n<li><strong>对话历史保存</strong>：定期将对话内容保存为 JSON 文件，便于后续分析。</li>\n</ol>\n<h2 id=\"技术栈\"><a class=\"anchor\" href=\"#技术栈\">#</a> 技术栈</h2>\n<ul>\n<li>Python</li>\n<li>Porcupine（关键词检测）</li>\n<li>WebRTC VAD（语音活动检测）</li>\n<li>SenseVoice Small（语音识别）</li>\n<li>Ollama API（对话生成）</li>\n<li>GPT-SoVITS（语音合成）</li>\n<li>PyAudio, NumPy, SciPy（音频处理）</li>\n</ul>\n<h3 id=\"tts部分\"><a class=\"anchor\" href=\"#tts部分\">#</a> TTS 部分</h3>\n<ul>\n<li>本项目基于 GPT-Sovits-v2，感谢开源社区工作者的贡献！</li>\n</ul>\n<h4 id=\"gpt-sovits-tts-项目\"><a class=\"anchor\" href=\"#gpt-sovits-tts-项目\">#</a> GPT-SoVITS TTS 项目</h4>\n<p>这是一个基于 GPT-SoVITS API 的文本到语音（TTS）项目。该项目允许用户根据不同的情感生成和播放语音，使用预定义的参考音频来影响输出的语音风格。</p>\n<h5 id=\"功能特点\"><a class=\"anchor\" href=\"#功能特点\">#</a> 功能特点</h5>\n<ul>\n<li>支持多种情感的语音生成（高兴、抑郁、激动、平静、纠结）</li>\n<li>使用参考音频来控制语音风格</li>\n<li>实时生成并播放 WAV 格式的音频文件</li>\n<li>可自定义文本输入和输出文件名</li>\n<li>提供 TTS 处理时间统计</li>\n<li>可以添加一个情感识别模型来决定参考音频，从而控制音频合成情感 (to do)</li>\n</ul>\n<h2 id=\"使用指南\"><a class=\"anchor\" href=\"#使用指南\">#</a> 使用指南</h2>\n<ol>\n<li>克隆仓库：</li>\n</ol>\n<ul>\n<li>\n<p>git clone <a href=\"https://github.com/HaxxorCialtion/ASR_LLM_TTS_py.git\">https://github.com/HaxxorCialtion/ASR_LLM_TTS_py.git</a></p>\n</li>\n<li>\n<p>cd intelligent-voice-assistant</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>安装依赖：</li>\n</ol>\n<ul>\n<li>pip install -r requirements.txt</li>\n</ul>\n<ol start=\"3\">\n<li>准备必要的 API 密钥和模型：</li>\n</ol>\n<ul>\n<li>获取 Porcupine API 密钥</li>\n<li>下载 SenseVoice Small 模型文件</li>\n<li>确保 Ollama API 服务已经运行</li>\n<li>开启 GPT-Sovits API 服务</li>\n</ul>\n<ol start=\"4\">\n<li>配置系统：</li>\n</ol>\n<ul>\n<li>在脚本中填入 Porcupine API 密钥</li>\n<li>设置 ASR 模型路径</li>\n<li>配置 Ollama API 端点（默认为本地）</li>\n<li>配置 GPT-sovits 模型和参考音频</li>\n</ul>\n<h2 id=\"使用方法\"><a class=\"anchor\" href=\"#使用方法\">#</a> 使用方法</h2>\n<ol>\n<li>\n<p>运行主脚本：<br />\npython <a href=\"http://main.py\">main.py</a></p>\n</li>\n<li>\n<p>等待系统提示 &quot;Listening for wake word...&quot;</p>\n</li>\n<li>\n<p>说出唤醒词（默认为 &quot;hey bro&quot;）开始对话</p>\n</li>\n<li>\n<p>与语音助手进行自然语言交互</p>\n</li>\n<li>\n<p>超时则需再次触发</p>\n</li>\n<li>\n<p>结束本轮对话即自动保存对话记录</p>\n</li>\n</ol>\n<h2 id=\"主要特性\"><a class=\"anchor\" href=\"#主要特性\">#</a> 主要特性</h2>\n<ul>\n<li>实时语音交互</li>\n<li>智能对话生成</li>\n<li>自然语音合成</li>\n<li>长时间无语音自动休眠</li>\n<li>对话历史记录</li>\n</ul>\n<h2 id=\"自定义设置\"><a class=\"anchor\" href=\"#自定义设置\">#</a> 自定义设置</h2>\n<ul>\n<li>修改 <code>settings</code>  变量来自定义助手的角色和背景</li>\n<li>调整 <code>max_silence_duration</code>  和 <code>min_speech_duration</code>  等参数来优化语音检测</li>\n<li>更换唤醒词和对应的模型文件</li>\n</ul>\n<h2 id=\"许可证\"><a class=\"anchor\" href=\"#许可证\">#</a> 许可证</h2>\n<p>本项目采用 MIT 许可证 - 查看 <a href=\"LICENSE\">LICENSE</a> 文件了解详情</p>\n<h2 id=\"联系方式\"><a class=\"anchor\" href=\"#联系方式\">#</a> 联系方式</h2>\n<p>项目维护者：HaxxorCialtion - <a href=\"mailto:cialtion@outlook.com\">cialtion@outlook.com</a><br />\nBilibili 视频地址：<a href=\"https://www.bilibili.com/video/BV1pftreQEbu\">https://www.bilibili.com/video/BV1pftreQEbu</a></p>\n<h2 id=\"致谢\"><a class=\"anchor\" href=\"#致谢\">#</a> 致谢</h2>\n<ul>\n<li><a href=\"https://github.com/Picovoice/porcupine\">Porcupine</a> - 用于唤醒词检测</li>\n<li><a href=\"https://github.com/FunAudioLLM/SenseVoice\">SenseVoice</a> - 提供 ASR 模型</li>\n<li><a href=\"https://github.com/ollama/ollama\">Ollama</a> - 本地大语言模型服务</li>\n<li><a href=\"https://github.com/QwenLM/Qwen2.5\">LLM</a> - LLLM 服务</li>\n<li><a href=\"https://github.com/RVC-Boss/GPT-SoVITS\">GPT-SoVITS</a> - 用于语音合成</li>\n</ul>\n",
            "tags": [
                "TTS",
                "LLM",
                "ASR",
                "AI"
            ]
        }
    ]
}